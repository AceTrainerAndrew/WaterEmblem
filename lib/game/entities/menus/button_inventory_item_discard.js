/** *  button_inventory_item_discard.js *  ----- */ig.module(    'game.entities.menus.button_inventory_item_discard').requires(    'plugins.button.button').defines(function() {    "use strict";    ig.global.EntityButton_inventory_item_discard = Button.extend({        name: 'btn_inventory_item_discard',        text: ['Discard'],        pressedUp: function() {            // Discard the item (delete the item from inventory IF it was selected). If enemy item drop is available, it is placed into the slot of the discarded item.            // TODO: Prompt user for confirmation before discarding item                        if (ig.game.units[ig.game.activeUnit].unitType === 'player') {                if (ig.game.units[ig.game.activeUnit].selectedItemIndex !== null) {                    if (ig.game.item_drop !== null) {                        console.log('Discarded ' + ig.game.units[ig.game.activeUnit].item[ig.game.units[ig.game.activeUnit].selectedItemIndex].name + ', obtained ' + ig.game.item_drop.name + '.')                        ig.game.units[ig.game.activeUnit].item[ig.game.units[ig.game.activeUnit].selectedItemIndex] = ig.game.item_drop;                        ig.game.units[ig.game.activeUnit].item_uses[ig.game.units[ig.game.activeUnit].selectedItemIndex] = ig.game.item_drop.uses;                        ig.game.units[ig.game.activeUnit].turnUsed = true;                        ig.game.units[ig.game.activeUnit].isEquipping = false;                    }                    else {                        console.log('Discarded ' + ig.game.units[ig.game.activeUnit].item[ig.game.units[ig.game.activeUnit].selectedItemIndex].name + '.');                        ig.game.units[ig.game.activeUnit].item[ig.game.units[ig.game.activeUnit].selectedItemIndex] = null;                        ig.game.units[ig.game.activeUnit].item_uses[ig.game.units[ig.game.activeUnit].selectedItemIndex] = 0;                    }                ig.game.item_drop = null;                   }                  else if (ig.game.item_drop !== null) {                    console.log('Discarded ' + ig.game.item_drop.name + '.');                    ig.game.item_drop = null;                    ig.game.units[ig.game.activeUnit].turnUsed = true;                    ig.game.units[ig.game.activeUnit].isEquipping = false;                }            }            else if (ig.game.units[ig.game.activeUnit].unitType === 'enemy') {                if (ig.game.targetedUnit.selectedItemIndex !== null) {                    if (ig.game.item_drop !== null) {                        console.log('Discarded ' + ig.game.targetedUnit.item[ig.game.targetedUnit.selectedItemIndex].name + ', obtained ' + ig.game.item_drop.name + '.')                        ig.game.targetedUnit.item[ig.game.targetedUnit.selectedItemIndex] = ig.game.item_drop;                        ig.game.targetedUnit.item_uses[ig.game.targetedUnit.selectedItemIndex] = ig.game.item_drop.uses;                        ig.game.targetedUnit.isEquipping = false;                        ig.game.units[ig.game.activeUnit].turnUsed = true;                    }                    else {                        console.log('Discarded ' + ig.game.targetedUnit.item[ig.game.targetedUnit.selectedItemIndex].name + '.');                        ig.game.targetedUnit.item[ig.game.targetedUnit.selectedItemIndex] = null;                        ig.game.targetedUnit.item_uses[ig.game.targetedUnit.selectedItemIndex] = 0;                    }                ig.game.item_drop = null;                   }                  else if (ig.game.item_drop !== null) {                    console.log('Discarded ' + ig.game.item_drop.name + '.');                    ig.game.item_drop = null;                    ig.game.targetedUnit.isEquipping = false;                    ig.game.units[ig.game.activeUnit].turnUsed = true;                }            }            ig.game.units[ig.game.activeUnit].selectedItemIndex = null;            ig.game.units[ig.game.activeUnit].selectedWeapon = null;            ig.game.units[ig.game.activeUnit].isEquipping = false;                        ig.global.killAllButtons(Button);            ig.game.menuVisible = false;        }    });});